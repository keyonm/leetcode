{"id":1386655907,"question_id":110,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1726066581,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1386655907/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        if (root == NULL) {\n            return true;\n        }\n        if (Height(root) == -1) {\n            return false;\n        }\n\t\treturn true;\n\n    }\n\n    int Height(TreeNode* root) {\n        if (root == NULL) {\n            return 0;\n        }\n        int leftHeight = Height(root->left);\n        int rightHeight = Height(root->right);\n        if (leftHeight == -1 || rightHeight == -1 || abs(leftHeight - rightHeight) > 1)  {\n            return -1;\n        }\n\n        return max(leftHeight, rightHeight) + 1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}