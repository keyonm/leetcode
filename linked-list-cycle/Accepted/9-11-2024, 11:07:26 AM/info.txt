{"id":1386666692,"question_id":141,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1726067246,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1386666692/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"10.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode* slow = head;\n        ListNode* fast = head;\n\n        while(fast!=nullptr && fast->next!=nullptr){\n            slow = slow->next;\n            fast = fast->next->next; \n        if(fast==slow){\n            return true;\n        }\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}